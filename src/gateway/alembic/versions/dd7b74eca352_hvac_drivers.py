"""hvac_drivers

Revision ID: dd7b74eca352
Revises: 9813cf3ca8f3
Create Date: 2022-08-16 18:29:49.568444

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd7b74eca352'
down_revision = '0f6ba3c709b6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    new_table = op.create_table('hvac_output_link',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hvac_id', sa.Integer(), nullable=False),
    sa.Column('output_id', sa.Integer(), nullable=False),
    sa.Column('mode', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hvac_id'], ['thermostatgroup.id'], name=op.f('fk_hvac_output_link_hvac_id_thermostatgroup'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['output_id'], ['output.id'], name=op.f('fk_hvac_output_link_output_id_output'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hvac_output_link')),
    sa.UniqueConstraint('hvac_id', 'output_id', 'mode', name=op.f('uq_hvac_output_link_hvac_id')),
    sqlite_autoincrement=True
    )
    # ### end Alembic commands ###

    # ### start migrate old data into new table ###
    # fetch old data
    conn = op.get_bind()
    res = conn.execute("select output_id, thermostat_group_id, mode, value from outputtothermostatgroup")
    results = res.fetchall()

    # Prepare an old_info object to insert into the new table.
    old_info = [{'output_id': r[0], 'hvac_id': r[1], 'mode': r[2], 'value': r[3]} for r in results]

    # Insert old_info into new farminfo table.
    op.bulk_insert(new_table, old_info)

    # ### end migrate old data into new table ###
    
    op.drop_table('outputtothermostatgroup')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('outputtothermostatgroup',
    sa.Column('output_id', sa.INTEGER(), nullable=False),
    sa.Column('thermostat_group_id', sa.INTEGER(), nullable=False),
    sa.Column('mode', sa.VARCHAR(length=255), nullable=False),
    sa.Column('index', sa.INTEGER(), nullable=False),
    sa.Column('value', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['output_id'], ['output.id'], name='fk_outputtothermostatgroup_output_id_output', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['thermostat_group_id'], ['thermostatgroup.id'], name='fk_outputtothermostatgroup_thermostat_group_id_thermostatgroup', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('output_id', 'thermostat_group_id', 'mode', name='pk_outputtothermostatgroup')
    )
    op.drop_table('hvac_output_link')
    # ### end Alembic commands ###
